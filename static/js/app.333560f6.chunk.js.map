{"version":3,"sources":["App.js"],"names":["App","useState","inputText","setInputText","description","key","completed","tasks","setTasks","addTask","useCallback","keys","map","task","parseInt","console","log","maxKey","Math","max","newTask","toString","style","styles","container","innerContainer","title","value","onChangeText","height","paddingBottom","onPress","data","keyExtractor","item","renderItem","curTask","find","t","checked","textStyle","textDecorationLine","textDecorationStyle","undefined","StyleSheet","create","input","flex","flexDirection","lineHeight","marginBottom","fontSize","alignSelf","maxWidth","backgroundColor","alignItems","justifyContent"],"mappings":"gQAKe,SAASA,IACtB,MAA+BC,mBAAS,IAAxC,WAAIC,EAAJ,KAAeC,EAAf,KACA,EAAuBF,mBAAS,CAC9B,CAACG,YAAa,SAAUC,IAAK,IAAKC,WAAW,GAC7C,CAACF,YAAa,SAAUC,IAAK,IAAKC,WAAW,GAC7C,CAACF,YAAa,SAAUC,IAAK,IAAKC,WAAW,KAH/C,WAAIC,EAAJ,KAAWC,EAAX,KAKIC,EAAUC,uBAAY,WACxB,IAAIC,EAAOJ,EAAMK,KAAI,SAAAC,GAAI,OAAIC,SAASD,EAAKR,QAC3CU,QAAQC,IAAIL,GACZ,IAAIM,EAASC,KAAKC,IAAL,MAAAD,KAAI,IAAQP,IAAQ,EAC7BS,EAAU,CAAChB,YAAYF,EAAWI,WAAW,EAAOD,IAAKY,EAAOI,YACpEN,QAAQC,IAAII,GACZZ,EAAS,GAAD,WAAKD,GAAL,CAAYa,KACpBjB,EAAa,MACZ,CAACD,IACN,OACE,cAAC,IAAD,CAAMoB,MAASC,EAAOC,UAAtB,SACA,eAAC,IAAD,CAAMF,MAASC,EAAOE,eAAtB,UACA,cAAC,IAAD,CAAMH,MAASC,EAAOG,MAAtB,sBACA,cAAC,IAAD,CAAOC,MAASzB,EAAW0B,aAAczB,EAAcmB,MAAS,CAACO,OAAO,GAAIC,cAAe,MAC3F,cAAC,IAAD,CAAQJ,MAAO,MAAMK,QAAStB,IAC9B,cAAC,IAAD,CAAUuB,KAAMzB,EAAO0B,aAAgB,SAACC,GAAD,OAAUA,EAAK7B,KAAK8B,WAAY,gBAAQtB,EAAR,EAAEqB,KAAF,OACvE,cAAC,IAAD,CAAUH,QAAS,WACjB,IAAIK,EAAU7B,EAAM8B,MAAK,SAAAC,GAAC,OAAIA,EAAEjC,KAAOQ,EAAKR,OAC5C+B,EAAQ9B,WAAa8B,EAAQ9B,UAC7BE,EAAS,IAAID,KACZmB,MAASb,EAAKT,YACjBmC,QAAS1B,EAAKP,UACdkC,UAAW3B,EAAKP,UAAY,CAC1BmC,mBAAoB,eACpBC,oBAAqB,cACpBC,YAQL,IAAMpB,EAASqB,IAAWC,OAAO,CAC/BC,MAAM,CACJC,KAAM,EACNC,cAAe,MACfC,WAAY,GACZnB,cAAe,GACfoB,aAAc,IAEhBxB,MAAM,CACJyB,SAAU,GACVC,UAAW,UAEb3B,eAAgB,CACd4B,SAAU,KAEZ7B,UAAW,CACTuB,KAAM,EACNO,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,c","file":"static/js/app.333560f6.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useCallback, useState } from 'react';\r\nimport { FlatList, StyleSheet, Text, View} from 'react-native';\r\nimport { Button, CheckBox, Input} from 'react-native-elements';\r\n\r\nexport default function App() {\r\n  let[inputText, setInputText] = useState(\"\")\r\n  let[tasks, setTasks] = useState([\r\n    {description: \"Task 1\", key: \"1\", completed: true},\r\n    {description: \"Task 2\", key: \"2\", completed: false},\r\n    {description: \"Task 3\", key: \"3\", completed: false},\r\n  ])\r\n  let addTask = useCallback(() => {\r\n    let keys = tasks.map(task => parseInt(task.key))\r\n    console.log(keys)\r\n    let maxKey = Math.max(...keys) + 1\r\n    let newTask = {description:inputText, completed: false, key: maxKey.toString()}\r\n    console.log(newTask)\r\n    setTasks([...tasks, newTask])\r\n    setInputText(\"\")\r\n  }, [inputText])\r\nreturn (\r\n  <View style = {styles.container}>\r\n  <View style = {styles.innerContainer}>\r\n  <Text style = {styles.title}>TODO App</Text>\r\n  <Input value = {inputText} onChangeText={setInputText} style = {{height:30, paddingBottom: 10}}></Input>\r\n  <Button title= \"Add\" onPress={addTask}></Button>\r\n  <FlatList data={tasks} keyExtractor = {(item) => item.key} renderItem={({item: task}) =>\r\n  <CheckBox onPress={() =>{\r\n    let curTask = tasks.find(t => t.key == task.key)\r\n    curTask.completed = !curTask.completed\r\n    setTasks([...tasks])\r\n  }} title = {task.description} \r\n  checked={task.completed}\r\n  textStyle={task.completed ? {\r\n    textDecorationLine: 'line-through', \r\n    textDecorationStyle: 'solid'\r\n  }: undefined}\r\n  ></CheckBox>\r\n  }/>\r\n    </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input:{\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    lineHeight: 40,\r\n    paddingBottom: 50,\r\n    marginBottom: 50\r\n  },\r\n  title:{\r\n    fontSize: 25,\r\n    alignSelf: \"center\",\r\n  },\r\n  innerContainer: {\r\n    maxWidth: 300,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n\r\n"],"sourceRoot":""}